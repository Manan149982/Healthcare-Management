<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>global.AppointmentUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>AppointmentUtils</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var AppointmentUtils = Class.create();
AppointmentUtils.prototype = {
    initialize: function(patientId) {
        this.patientId = patientId;
    },

    getAppointmentsForPatient: function() {
        var appointments = [];
        var gr = new GlideRecord('u_appointment');
        gr.addQuery('u_patient_id', this.patientId);
        gr.query();
        while (gr.next()) {
            appointments.push({
                number: gr.getDisplayValue('u_number'),
                patient: gr.getDisplayValue('u_patient_id'),
                date: gr.getDisplayValue('u_appointment_date'),
                department: gr.getDisplayValue('u_department'),
                status: gr.getDisplayValue('u_status'),
                doctor: gr.getDisplayValue('u_doctor')
            });
        }
        return appointments;
    },

    isAppointmentConfirmed: function(appointmentId) {
        var gr = new GlideRecord('u_appointment');
        return gr.get(appointmentId) && gr.u_status.toString().toLowerCase() === 'confirmed';
    },

    getAppointmentById: function(appointmentId) {
var gr = new GlideRecord('u_appointment');
        if (gr.get(appointmentId)) {
            return {
                number: gr.getDisplayValue('u_number'),
                patient: gr.getDisplayValue('u_patient_id'),
                date: gr.getDisplayValue('u_appointment_date'),
                department: gr.getDisplayValue('u_department'),
                status: gr.getDisplayValue('u_status'),
                doctor: gr.getDisplayValue('u_doctor')
            };
        }
        return null;
    },

    getAppointmentsByDate: function(dateStr) {
        var results = [];
        var gr = new GlideRecord('u_appointment');
        var startOfDay = new GlideDateTime(dateStr + ' 00:00:00');
        var endOfDay = new GlideDateTime(dateStr + ' 23:59:59');
        gr.addQuery('u_appointment_date', '>=', startOfDay);
        gr.addQuery('u_appointment_date', '<=', endOfDay);
        gr.query();
        while (gr.next()) {
            results.push({
                number: gr.getDisplayValue('number'),
                patient: gr.getDisplayValue('u_patient_id'),
                date: gr.getDisplayValue('u_appointment_date'),
                department: gr.getDisplayValue('u_department'),
                status: gr.getDisplayValue('u_status'),
                doctor: gr.getDisplayValue('u_doctor')
 });
        }
        return results;
    },

    getAppointmentsByDepartment: function(departmentName) {
        var results = [];
        var gr = new GlideRecord('u_appointment');
        gr.addQuery('u_department', departmentName);
        gr.query();
        while (gr.next()) {
            results.push({
                sys_id: gr.getValue('sys_id'),
                number: gr.getDisplayValue('u_number'),
                patient: gr.getDisplayValue('u_patient_id'),
                date: gr.getDisplayValue('u_appointment_date'),
                department: gr.getDisplayValue('u_department'),
                status: gr.getDisplayValue('u_status'),
                doctor: gr.getDisplayValue('u_doctor')
            });
        }
        return results;
    },
    type: 'AppointmentUtils'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-08 19:28:58</sys_created_on>
        <sys_id>0ac824fac3ae2210845937cc0501314d</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>AppointmentUtils</sys_name>
        <sys_package display_value="Healthcare Management " source="c018c42cc3262210845937cc050131a9">c018c42cc3262210845937cc050131a9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Healthcare Management ">c018c42cc3262210845937cc050131a9</sys_scope>
        <sys_update_name>sys_script_include_0ac824fac3ae2210845937cc0501314d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-08 19:30:57</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>0ac824fac3ae2210845937cc0501314d</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-08 19:28:57</sys_created_on>
        <sys_id>75e824fac3ae2210845937cc0501315a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-08 19:28:57</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
